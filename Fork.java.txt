import java.util.concurrent.Semaphore;
import java.util.concurrent.ThreadLocalRandom;
public class Fork
{
    boolean notuse;
    Semaphore sem;
    public Fork() {
        notuse = false;
        sem = new Semaphore(1);
    }
    public void getFork()
    {
        try
        {
            while(notuse)
            {
                try
                {
                    sem.acquire();

                }
                catch(InterruptedException e) {}
            }
            notuse = true;
        }
        catch(Exception e){}
    }
    public void pushFork()
    {
        try
        {
            notuse = false;
            sem.release();
        }
        catch (Exception e){}
    }
    public boolean isUsed() {
        return notuse;

    }
}
